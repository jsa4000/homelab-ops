controllers:
  main:
    annotations:
      # Force to reload because configmap or secret changed. Use kustomization to generate maps with suffix instead.
      reloader.stakater.com/auto: "true"
    replicas: 1
    strategy: RollingUpdate
    # Use deployment (stateless) instead statefulset and Database for store the state instead of persistence.
    # https://spacelift.io/blog/statefulset-vs-deployment
    # type: statefulset
    initContainers:
      # This container will create the main database and user
      init-db:
        image:
          repository: ghcr.io/onedr0p/postgres-init
          tag: 16.8
        envFrom:
          - secretRef:
              name: prowlarr-secret
    containers:
      main:
        image:
          repository: ghcr.io/onedr0p/prowlarr
          tag: 1.30.2
        envFrom:
          - secretRef:
              name: prowlarr-secret
        env:
          TZ: Europe/Madrid
          PROWLARR__APP__INSTANCENAME: Prowlarr
          PROWLARR__SERVER__PORT: &port 80
          PROWLARR__AUTH__METHOD: External
          PROWLARR__AUTH__REQUIRED: DisabledForLocalAddresses
          PROWLARR__LOG__DBENABLED: "False"
          PROWLARR__LOG__LEVEL: info
          PROWLARR__APP__THEME: dark
        probes:
          liveness: &probe
            enabled: true
            custom: true
            spec:
              httpGet:
                path: /ping
                port: *port
              initialDelaySeconds: 0
              periodSeconds: 10
              timeoutSeconds: 1
              failureThreshold: 3
          readiness: *probe
          startup:
            enabled: true

        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          capabilities: { drop: ["ALL"] }
        resources:
          requests:
            cpu: 10m
      exporter:
        dependsOn: main
        image:
          repository: ghcr.io/onedr0p/exportarr
          tag: v2.0.1
        args:
          - prowlarr
        env:
          PORT: &port-exp 9707
          URL: "http://prowlarr.media.svc.cluster.local:80"
          APIKEY:
            secretKeyRef:
              name: prowlarr-secret
              key: PROWLARR__AUTH__APIKEY
        probes:
          liveness: &probe-ex
            enabled: true
            custom: true
            spec:
              httpGet:
                path: /healthz
                port: *port-exp
              initialDelaySeconds: 0
              periodSeconds: 10
              timeoutSeconds: 1
              failureThreshold: 3
          readiness: *probe-ex
          startup:
            enabled: true

defaultPodOptions:
  enableServiceLinks: false
  # Since it does not interact with qbittorrent volume it does need to login as same user
  securityContext:
    runAsUser: 1000
    runAsGroup: 1000
    fsGroup: 1000
    fsGroupChangePolicy: OnRootMismatch
    supplementalGroups: [44, 105, 10000, 568]

service:
  main:
    controller: main
    primary: true
    ports:
      http:
        port: *port
  exporter:
    controller: main
    ports:
      http:
        port: *port-exp

persistence:
  config:
    type: emptyDir
  tmp:
    type: emptyDir

serviceMonitor:
  exporter:
    enabled: true
    labels:
      release: prometheus-stack
    serviceName: prowlarr-exporter
    endpoints:
      - port: http
        scheme: http
        path: /metrics
        interval: 1m
        scrapeTimeout: 10s
