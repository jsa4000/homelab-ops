controllers:
  main:
    annotations:
      # Force to reload because configmap or secret changed. Use kustomization to generate maps with suffix instead.
      reloader.stakater.com/auto: "true"
    #Â Avoid tracking the number of 'replicas' in Git so ArgoCD does not track the change done by HPA.
    # https://argo-cd.readthedocs.io/en/stable/user-guide/best_practices/#leaving-room-for-imperativeness
    # replicas: 1
    strategy: RollingUpdate
    type: statefulset
    containers:
      main:
        image:
          repository: filebrowser/filebrowser
          tag: v2.31.2
        env:
          TZ: Europe/Madrid
          FB_DATABASE: "/config/filebrowser.db"
          FB_ROOT: "/downloads"
          FB_LOG: "stdout"
          FB_NOAUTH: "true"
        probes:
          liveness: &probe
            enabled: true
            custom: true
            spec:
              httpGet:
                path: /health
                port: &port 80
              initialDelaySeconds: 0
              periodSeconds: 10
              timeoutSeconds: 1
              failureThreshold: 3
          readiness: *probe
          startup:
            enabled: true
            custom: true
            spec:
              httpGet:
                path: /health
                port: *port
              initialDelaySeconds: 0
              periodSeconds: 10
              timeoutSeconds: 1
              failureThreshold: 30
        resources:
          requests:
            cpu: 10m
            memory: 50Mi

defaultPodOptions:
  enableServiceLinks: false
  # Same user as qbittorrent so it has permissions rw over downloads volume
  securityContext:
    runAsUser: 568
    runAsGroup: 568
    fsGroup: 568
    fsGroupChangePolicy: OnRootMismatch
    supplementalGroups: [44, 105, 10000, 1000]

service:
  main:
    controller: main
    ports:
      http:
        port: *port

persistence:
  config:
    type: persistentVolumeClaim
    accessMode: ReadWriteOnce
    storageClass: longhorn
    size: 1Gi
    globalMounts:
      - path: /config
  downloads:
    # Persistent Volume Claims cannot be shared across namespaces (v1.26 [alpha])
    # https://kubernetes.io/docs/concepts/storage/persistent-volumes/#cross-namespace-data-sources
    existingClaim: qbittorrent-downloads
    advancedMounts:
      main:
        main:
          - path: /downloads
