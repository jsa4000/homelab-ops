controllers:
  main:
    annotations:
      # Force to reload because configmap or secret changed. Use kustomization to generate maps with suffix instead.
      reloader.stakater.com/auto: "true"
    replicas: 1
    strategy: RollingUpdate
    type: statefulset
    initContainers:
      init:
        image:
          repository: bash
          tag: alpine3.20
        command: ["bash"]
        args: ["/etc/scripts/media-init.sh"]
    containers:
      main:
        image:
          repository: ghcr.io/onedr0p/qbittorrent
          #tag: 5.0.2 # Authentication is needed. It does not support environment variable.
          tag: 5.0.2
        env:
          TZ: Europe/Madrid
          #QBT_WEBUI_PORT: &port 80
          #QBT_TORRENTING_PORT: &port-bt 32100
          QBITTORRENT__PORT: &port 80
          QBITTORRENT__BT_PORT: &port-bt 32100
          QBT_Preferences__WebUI__AuthSubnetWhitelistEnabled: true
          QBT_Preferences__WebUI__AuthSubnetWhitelist: |-
            10.42.0.0/16, 10.52.0.0/16, 192.168.205.0/24, 192.168.3.0/24
        resources:
          requests:
            cpu: 25m
            memory: 700Mi

defaultPodOptions:
  securityContext:
    runAsNonRoot: true
    runAsUser: 568
    runAsGroup: 568
    fsGroup: 568
    fsGroupChangePolicy: OnRootMismatch
    supplementalGroups: [10000]
    seccompProfile: { type: RuntimeDefault }

service:
  main:
    controller: main
    primary: true
    ports:
      http:
        port: *port
  # Service to export bittorrent port, use NodePort or LoadBalancer to expose the service.
  bittorrent:
    enabled: true
    controller: main
    type: NodePort
    ports:
      bittorrent:
        protocol: TCP
        port: *port-bt
        nodePort: *port-bt

persistence:
  config:
    type: persistentVolumeClaim
    accessMode: ReadWriteOnce
    storageClass: longhorn
    size: 1Gi
    globalMounts:
      - path: /config
  # Create 'qbittorrent-downloads' volume claim to be shared among media namespace
  downloads:
    type: persistentVolumeClaim
    accessMode: ReadWriteMany
    storageClass: longhorn
    size: 1Gi
    globalMounts:
      - path: /downloads
  init:
    type: configMap
    name: media-init
    defaultMode: 0775
    globalMounts:
      - path: /etc/scripts
