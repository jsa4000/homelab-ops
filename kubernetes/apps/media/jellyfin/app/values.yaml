controllers:
  main:
    annotations:
      # Force to reload because configmap or secret changed. Use kustomization to generate maps with suffix instead.
      reloader.stakater.com/auto: "true"
    replicas: 1
    strategy: RollingUpdate
    type: statefulset
    containers:
      main:
        image:
          repository: jellyfin/jellyfin
          tag: 10.9.6
        env:
          TZ: Europe/Madrid
          DOTNET_SYSTEM_IO_DISABLEFILELOCKING: "true"
          JELLYFIN_FFmpeg__probesize: 50000000
          JELLYFIN_FFmpeg__analyzeduration: 500000000
        probes:
          liveness: &probe
            enabled: true
            custom: true
            spec:
              httpGet:
                path: /health
                port: &port 8096
              initialDelaySeconds: 0
              periodSeconds: 10
              timeoutSeconds: 1
              failureThreshold: 3
          readiness: *probe
          startup:
            enabled: true
            custom: true
            spec:
              httpGet:
                path: /health
                port: *port
              initialDelaySeconds: 0
              periodSeconds: 10
              timeoutSeconds: 1
              failureThreshold: 30
        resources:
          requests:
            cpu: 2000m
            memory: 1Gi

defaultPodOptions:
  securityContext:
    runAsUser: 1000
    runAsGroup: 1000
    fsGroup: 1000
    fsGroupChangePolicy: OnRootMismatch
    supplementalGroups: [44, 105, 10000, 568]
  # Deploy the workload into a node with GPU support (preferably).
  affinity:
    nodeAffinity:
      preferredDuringSchedulingIgnoredDuringExecution:
        - weight: 100
          preference:
            matchExpressions:
              - key: "intel.feature.node.kubernetes.io/gpu"
                operator: "In"
                values: ["true"]

service:
  main:
    controller: main
    ports:
      http:
        port: *port

persistence:
  config:
    type: persistentVolumeClaim
    accessMode: ReadWriteOnce
    storageClass: longhorn
    size: 1Gi
    globalMounts:
      - path: /config
  downloads:
    # Persistent Volume Claims cannot be shared across namespaces (v1.26 [alpha])
    # https://kubernetes.io/docs/concepts/storage/persistent-volumes/#cross-namespace-data-sources
    existingClaim: qbittorrent-downloads
    advancedMounts:
      main:
        main:
          - path: /downloads
  transcode:
    type: emptyDir
    globalMounts:
      - path: /transcode
