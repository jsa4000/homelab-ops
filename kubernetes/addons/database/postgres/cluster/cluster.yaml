apiVersion: postgresql.cnpg.io/v1
kind: Cluster
metadata:
  name: postgres
spec:
  # Instances must be in high availability > 1
  instances: 1
  # Delay the probe execution to ensure cluster is ready.
  startDelay: 300
  stopDelay: 300
  replicationSlots:
    highAvailability:
      enabled: false
    updateInterval: 300
  primaryUpdateStrategy: unsupervised
  postgresql:
    # shared_preload_libraries:
    #   - timescaledb
    parameters:
      max_connections: "400"
      shared_buffers: 256MB
      pg_stat_statements.max: "10000"
      pg_stat_statements.track: all
      auto_explain.log_min_duration: "10s"
      effective_cache_size: "768MB"
      maintenance_work_mem: "64MB"
      checkpoint_completion_target: "0.9"
      wal_buffers: "7864kB"
      default_statistics_target: "100"
      random_page_cost: "1.1"
      effective_io_concurrency: "200"
      work_mem: "655kB"
      huge_pages: "off"
      # max_wal_size must be smaller than walStorage
      max_wal_size: "768MB"
    # Postgres host-based authentication
    # - Allow all non ssl connections.
    pg_hba:
      - host all all all trust
  logLevel: info
  storage:
    size: 5Gi
    storageClass: longhorn
  # Write-Ahead Log (WAL)
  walStorage:
    size: 1Gi
    storageClass: longhorn
  # Enable super user access to create databases and schemas
  # NOTE: CloudNative PG has been designed to work as a microservice architecture, one database per service.
  enableSuperuserAccess: true
  superuserSecret:
    name: postgres-superuser
  nodeMaintenanceWindow:
    inProgress: false
    reusePVC: false
  monitoring:
    enablePodMonitor: true
  backup:
    retentionPolicy: 10d
    barmanObjectStore:
      data:
        compression: bzip2
      wal:
        compression: bzip2
        maxParallel: 8
      destinationPath: s3://database/postgres
      endpointURL: http://minio.storage.svc.cluster.local:9000
      serverName: postgres-v1
      s3Credentials:
        accessKeyId:
          name: cloudnative-pg-minio
          key: MINIO_ACCESS_KEY
        secretAccessKey:
          name: cloudnative-pg-minio
          key: MINIO_SECRET_KEY
  # Recovery and initdb are mutually exclusive, so only include one of them
  # https://github.com/cloudnative-pg/cloudnative-pg/issues/1424
  # https://github.com/cloudnative-pg/cloudnative-pg/issues/1752
  bootstrap:
  #   # Create initial databases at startup (Not needed)
  #   # initdb:
  #   #   database: app
  #   #   owner: app
  #   #   secret:
  #   #     name: postgres-user
  #   #   encoding: "UTF8"
  #   # Cluster Recovery
  #   # Note: externalClusters is needed when recovering from an existing CNPG cluster
  #   # https://cloudnative-pg.io/documentation/1.20/recovery/
    recovery:
      source: postgres
  #     # recoveryTarget:
  #     #   # Time base target for the recovery
  #     #   # targetTime: "2023-08-11 11:14:21.00000+02"
  #     #   # Generated Barman Backup Id
  #     #   backupID: 20240713T150052
  externalClusters:
    - name: postgres
      barmanObjectStore:
        data:
          compression: bzip2
        wal:
          compression: bzip2
          maxParallel: 8
        destinationPath: s3://database/postgres
        endpointURL: http://minio.storage.svc.cluster.local:9000
        # Name of the server backup from Object Storage (previous version)
        serverName: postgres-v0
        s3Credentials:
          accessKeyId:
            name: cloudnative-pg-minio
            key: MINIO_ACCESS_KEY
          secretAccessKey:
            name: cloudnative-pg-minio
            key: MINIO_SECRET_KEY
  resources:
    requests:
      cpu: 500m
    limits:
      memory: 2Gi
  # https://cloudnative-pg.io/documentation/1.20/scheduling/
  affinity:
    enablePodAntiAffinity: true
    topologyKey: kubernetes.io/hostname
    podAntiAffinityType: preferred
