apiVersion: postgresql.cnpg.io/v1
kind: Cluster
metadata:
  name: postgres-cluster
  namespace: postgres
spec:
  instances: 1
  startDelay: 300
  stopDelay: 300
  replicationSlots:
    highAvailability:
      enabled: false
    updateInterval: 300
  primaryUpdateStrategy: unsupervised
  postgresql:
    # shared_preload_libraries:
    #   - timescaledb
    parameters:
      max_connections: "200"
      shared_buffers: 256MB
      pg_stat_statements.max: "10000"
      pg_stat_statements.track: all
      auto_explain.log_min_duration: "10s"
      effective_cache_size: "768MB"
      maintenance_work_mem: "64MB"
      checkpoint_completion_target: "0.9"
      wal_buffers: "7864kB"
      default_statistics_target: "100"
      random_page_cost: "1.1"
      effective_io_concurrency: "200"
      work_mem: "655kB"
      huge_pages: "off"
      min_wal_size: "1GB"
      max_wal_size: "3GB"
    pg_hba:
      # - hostssl app all all cert
      # - host app app all password
      - host all all all trust # Zitadel
  logLevel: debug
  storage:
    size: 5Gi
    storageClass: longhorn
  # Write-Ahead Log (WAL)
  walStorage:
    size: 4Gi
    storageClass: longhorn
  enableSuperuserAccess: true
  superuserSecret:
    name: postgres-superuser
  monitoring:
    enablePodMonitor: true
  bootstrap:
    initdb:
      database: app
      owner: app
      secret:
        name: postgres-user
      encoding: "UTF8"
  #  backup:
  #    retentionPolicy: 5d
  #    barmanObjectStore:
  #      wal:
  #        compression: bzip2
  #        maxParallel: 8
  #      destinationPath: s3://backups/postgres
  #      endpointURL: https://s3.us-east-1.amazonaws.com
  #      serverName: postgres-v1
  #      s3Credentials:
  #        accessKeyId:
  #          name: postgres-s3
  #          key: AWS_ACCESS_KEY
  #        secretAccessKey:
  #          name: postgres-s3
  #          key: AWS_SECRET_KEY
  resources: # m5large: m5xlarge 2vCPU, 8GI RAM
    requests:
      memory: "512Mi"
      cpu: "1"
    limits:
      memory: "1Gi"
      cpu: "2"

  affinity:
    enablePodAntiAffinity: false
    topologyKey: failure-domain.beta.kubernetes.io/zone

  nodeMaintenanceWindow:
    inProgress: false
    reusePVC: false
