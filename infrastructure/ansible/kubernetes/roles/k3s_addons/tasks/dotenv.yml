---
- name: Check if secret already exists
  shell: |
    kubectl get secret -n security cluster-secrets
  register: cluster_secrets_result
  when: inventory_hostname == groups['server'][0]
  ignore_errors: true
  failed_when: false
  changed_when: false

- name: Deploy Secrets
  run_once: true
  when:
    - inventory_hostname == groups['server'][0]
    - cluster_secrets_result.rc != 0
  block:
    - name: Create Security Namespace
      shell: |
        kubectl create namespace security
      ignore_errors: true
      failed_when: false
      changed_when: false

    - name: Copy file with owner and permissions
      ansible.builtin.copy:
        src: "{{ cluster_dotenv }}"
        dest: /tmp/.env

    # Update secret use: kubectl create secret generic -n security cluster-secrets --from-env-file=.env --dry-run=client -o yaml | kubectl apply -f -
    - name: Create dotenv Secrets
      shell: |
        kubectl create secret generic -n security cluster-secrets --from-env-file=/tmp/.env
    - name: Remove dotenv file
      ansible.builtin.file:
        path: /tmp/.env
        state: absent
