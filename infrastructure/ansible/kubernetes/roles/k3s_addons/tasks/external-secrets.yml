---
- name: Check External Secrets already installed
  command: >-
    kubectl get deployment
    --namespace=security
    external-secrets
  register: external_secrets_status_result
  when: inventory_hostname == groups['server'][0]
  ignore_errors: true
  failed_when: false
  changed_when: false

- name: Install External Secrets
  when:
    - inventory_hostname == groups['server'][0]
    - external_secrets_status_result.rc != 0
  run_once: true
  block:

    - name: Wait for External Secrets resources
      command: >-
        {% if item.type == 'daemonset' %}
        kubectl wait pods
        --namespace={{ item.namespace }}
        --selector='{{ item.selector }}'
        --for=condition=Ready
        --timeout=30s
        {% else %}
        kubectl wait {{ item.type }}/{{ item.name }}
        --namespace={{ item.namespace }}
        --for=condition=Available
        --timeout=30s
        {% else %}
        kubectl get {{ item.type }}/{{ item.name }}
        --namespace={{ item.namespace }}
        {% endif %}
      register: cr_result
      changed_when: false
      until: cr_result is succeeded
      retries: 30
      delay: 7
      with_items:
        - {name: external-secrets, type: deployment, namespace: security}
        - {name: external-secrets-webhook, type: deployment, namespace: security}
        - {name: external-secrets-cert-controller, type: deployment, namespace: security}
        #- {name: kube-secret-store, type: ClusterSecretStore, namespace: security}
      loop_control:
        label: "{{ item.type }}/{{ item.name }}"

    - name: Update External Secrets Resources
      shell: |
        kubectl kustomize github.com/jsa4000/homelab-ops//clusters/{{ cluster_env }}/addons/security/external-secrets?ref=main --enable-helm | kubectl apply -f -
      ignore_errors: true
      failed_when: false
      changed_when: false
