---
- name: Install External Secrets
  run_once: true
  when: inventory_hostname == groups['server'][0]
  block:
    - name: Create Security Namespace
      shell: |
        kubectl create namespace security
      ignore_errors: true
      failed_when: false
      changed_when: false

    - name: Install External Secrets Addon
      shell: |
        kubectl kustomize github.com/jsa4000/homelab-ops//clusters/{{ cluster_env }}/addons/security/external-secrets?ref=main --enable-helm | kubectl apply -f -
      ignore_errors: true
      failed_when: false
      changed_when: false

    - name: Wait for External Secrets resources
      vars:
        timeout: 35s
      command: >-
        {% if item.type == 'daemonset' %}
        kubectl wait pods --namespace={{ item.namespace }} --selector='{{ item.selector }}' --for=condition=Ready --timeout={{ timeout }}
        {% elif item.type == 'deployment' %}
        kubectl wait {{ item.type }}/{{ item.name }} --namespace={{ item.namespace }} --for=condition=Available --timeout={{ timeout }}
        {% else %}
        kubectl get {{ item.type }}/{{ item.name }} --namespace={{ item.namespace }}
        {% endif %}
      register: external_secrets_result
      changed_when: false
      with_items:
        - {name: external-secrets, type: deployment, namespace: security}
        - {name: external-secrets-webhook, type: deployment, namespace: security}
        - {name: external-secrets-cert-controller, type: deployment, namespace: security}
        #- {name: kube-secret-store, type: ClusterSecretStore, namespace: security}
      until: external_secrets_result is succeeded
      retries: 30
      delay: 7
      loop_control:
        label: "{{ item.type }}/{{ item.name }}"

    - name: Update External Secrets
      shell: |
        kubectl kustomize github.com/jsa4000/homelab-ops//clusters/{{ cluster_env }}/addons/security/external-secrets?ref=main --enable-helm | kubectl apply -f -
      ignore_errors: true
      failed_when: false
      changed_when: false
